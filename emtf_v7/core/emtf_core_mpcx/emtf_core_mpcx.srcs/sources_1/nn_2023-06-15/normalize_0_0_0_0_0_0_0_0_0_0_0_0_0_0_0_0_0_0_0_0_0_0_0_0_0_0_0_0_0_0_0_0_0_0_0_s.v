// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s (
        ap_clk,
        ap_rst,
        data_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27,
        ap_return_28,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [370:0] data_V_read;
output  [24:0] ap_return_0;
output  [24:0] ap_return_1;
output  [24:0] ap_return_2;
output  [24:0] ap_return_3;
output  [24:0] ap_return_4;
output  [24:0] ap_return_5;
output  [24:0] ap_return_6;
output  [24:0] ap_return_7;
output  [24:0] ap_return_8;
output  [24:0] ap_return_9;
output  [24:0] ap_return_10;
output  [24:0] ap_return_11;
output  [24:0] ap_return_12;
output  [24:0] ap_return_13;
output  [24:0] ap_return_14;
output  [24:0] ap_return_15;
output  [24:0] ap_return_16;
output  [24:0] ap_return_17;
output  [24:0] ap_return_18;
output  [24:0] ap_return_19;
output  [24:0] ap_return_20;
output  [24:0] ap_return_21;
output  [24:0] ap_return_22;
output  [24:0] ap_return_23;
output  [24:0] ap_return_24;
output  [24:0] ap_return_25;
output  [24:0] ap_return_26;
output  [24:0] ap_return_27;
output  [24:0] ap_return_28;
input   ap_ce;

reg[24:0] ap_return_0;
reg[24:0] ap_return_1;
reg[24:0] ap_return_2;
reg[24:0] ap_return_3;
reg[24:0] ap_return_4;
reg[24:0] ap_return_5;
reg[24:0] ap_return_6;
reg[24:0] ap_return_7;
reg[24:0] ap_return_8;
reg[24:0] ap_return_9;
reg[24:0] ap_return_10;
reg[24:0] ap_return_11;
reg[24:0] ap_return_12;
reg[24:0] ap_return_13;
reg[24:0] ap_return_14;
reg[24:0] ap_return_15;
reg[24:0] ap_return_16;
reg[24:0] ap_return_17;
reg[24:0] ap_return_18;
reg[24:0] ap_return_19;
reg[24:0] ap_return_20;
reg[24:0] ap_return_21;
reg[24:0] ap_return_22;
reg[24:0] ap_return_23;
reg[24:0] ap_return_24;
reg[24:0] ap_return_25;
reg[24:0] ap_return_26;
reg[24:0] ap_return_27;
reg[24:0] ap_return_28;

wire   [24:0] mul_ln703_fu_265_p2;
reg   [24:0] mul_ln703_reg_3767;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [23:0] mul_ln703_1_fu_276_p2;
reg   [23:0] mul_ln703_1_reg_3771;
wire   [23:0] mul_ln703_2_fu_259_p2;
reg   [23:0] mul_ln703_2_reg_3775;
wire   [24:0] mul_ln703_3_fu_264_p2;
reg   [24:0] mul_ln703_3_reg_3779;
wire   [24:0] mul_ln703_4_fu_280_p2;
reg   [24:0] mul_ln703_4_reg_3783;
wire   [24:0] mul_ln703_5_fu_286_p2;
reg   [24:0] mul_ln703_5_reg_3787;
wire   [24:0] mul_ln703_6_fu_283_p2;
reg   [24:0] mul_ln703_6_reg_3791;
wire   [24:0] mul_ln703_7_fu_269_p2;
reg   [24:0] mul_ln703_7_reg_3795;
wire   [24:0] mul_ln703_8_fu_272_p2;
reg   [24:0] mul_ln703_8_reg_3799;
wire   [24:0] mul_ln703_9_fu_271_p2;
reg   [24:0] mul_ln703_9_reg_3803;
wire   [24:0] mul_ln703_10_fu_258_p2;
reg   [24:0] mul_ln703_10_reg_3807;
wire   [24:0] mul_ln703_11_fu_278_p2;
reg   [24:0] mul_ln703_11_reg_3811;
wire   [24:0] mul_ln703_12_fu_262_p2;
reg   [24:0] mul_ln703_12_reg_3815;
wire   [24:0] mul_ln703_13_fu_279_p2;
reg   [24:0] mul_ln703_13_reg_3819;
wire   [24:0] mul_ln703_14_fu_284_p2;
reg   [24:0] mul_ln703_14_reg_3823;
wire   [24:0] mul_ln703_15_fu_282_p2;
reg   [24:0] mul_ln703_15_reg_3827;
wire   [24:0] mul_ln703_16_fu_281_p2;
reg   [24:0] mul_ln703_16_reg_3831;
wire   [24:0] mul_ln703_17_fu_263_p2;
reg   [24:0] mul_ln703_17_reg_3835;
wire   [24:0] mul_ln703_18_fu_270_p2;
reg   [24:0] mul_ln703_18_reg_3839;
wire   [24:0] mul_ln703_19_fu_285_p2;
reg   [24:0] mul_ln703_19_reg_3843;
wire   [24:0] mul_ln703_20_fu_274_p2;
reg   [24:0] mul_ln703_20_reg_3847;
wire   [24:0] mul_ln703_21_fu_273_p2;
reg   [24:0] mul_ln703_21_reg_3851;
wire   [24:0] mul_ln703_22_fu_260_p2;
reg   [24:0] mul_ln703_22_reg_3855;
wire   [24:0] mul_ln703_23_fu_277_p2;
reg   [24:0] mul_ln703_23_reg_3859;
wire   [24:0] mul_ln703_24_fu_268_p2;
reg   [24:0] mul_ln703_24_reg_3863;
wire   [24:0] mul_ln703_25_fu_275_p2;
reg   [24:0] mul_ln703_25_reg_3867;
wire   [24:0] mul_ln703_26_fu_266_p2;
reg   [24:0] mul_ln703_26_reg_3871;
wire   [24:0] mul_ln703_27_fu_267_p2;
reg   [24:0] mul_ln703_27_reg_3875;
wire   [19:0] mul_ln703_28_fu_261_p2;
reg   [19:0] mul_ln703_28_reg_3879;
wire   [12:0] mul_ln703_10_fu_258_p1;
wire    ap_block_pp0_stage0;
wire   [12:0] mul_ln703_2_fu_259_p1;
wire   [12:0] mul_ln703_22_fu_260_p1;
wire   [6:0] mul_ln703_28_fu_261_p1;
wire   [12:0] mul_ln703_12_fu_262_p1;
wire   [12:0] mul_ln703_17_fu_263_p1;
wire   [12:0] mul_ln703_3_fu_264_p1;
wire   [12:0] mul_ln703_fu_265_p1;
wire   [12:0] mul_ln703_26_fu_266_p1;
wire   [12:0] mul_ln703_27_fu_267_p1;
wire   [12:0] mul_ln703_24_fu_268_p1;
wire   [12:0] mul_ln703_7_fu_269_p1;
wire   [12:0] mul_ln703_18_fu_270_p1;
wire   [12:0] mul_ln703_9_fu_271_p1;
wire   [12:0] mul_ln703_8_fu_272_p1;
wire   [12:0] mul_ln703_21_fu_273_p1;
wire   [12:0] mul_ln703_20_fu_274_p1;
wire   [12:0] mul_ln703_25_fu_275_p1;
wire   [12:0] mul_ln703_1_fu_276_p1;
wire   [12:0] mul_ln703_23_fu_277_p1;
wire   [12:0] mul_ln703_11_fu_278_p1;
wire   [12:0] mul_ln703_13_fu_279_p1;
wire   [12:0] mul_ln703_4_fu_280_p1;
wire   [12:0] mul_ln703_16_fu_281_p1;
wire   [12:0] mul_ln703_15_fu_282_p1;
wire   [12:0] mul_ln703_6_fu_283_p1;
wire   [12:0] mul_ln703_14_fu_284_p1;
wire   [12:0] mul_ln703_19_fu_285_p1;
wire   [12:0] mul_ln703_5_fu_286_p1;
wire   [12:0] trunc_ln56_fu_3884_p1;
wire   [12:0] tmp_1_fu_3893_p4;
wire   [12:0] tmp_2_fu_3908_p4;
wire   [12:0] tmp_3_fu_3923_p4;
wire   [12:0] tmp_4_fu_3938_p4;
wire   [12:0] tmp_5_fu_3953_p4;
wire   [12:0] tmp_6_fu_3968_p4;
wire   [12:0] tmp_7_fu_3983_p4;
wire   [12:0] tmp_8_fu_3998_p4;
wire   [12:0] tmp_9_fu_4013_p4;
wire   [12:0] tmp_s_fu_4028_p4;
wire   [12:0] tmp_10_fu_4043_p4;
wire   [12:0] tmp_11_fu_4058_p4;
wire   [12:0] tmp_12_fu_4073_p4;
wire   [12:0] tmp_13_fu_4088_p4;
wire   [12:0] tmp_14_fu_4103_p4;
wire   [12:0] tmp_15_fu_4118_p4;
wire   [12:0] tmp_16_fu_4133_p4;
wire   [12:0] tmp_17_fu_4148_p4;
wire   [12:0] tmp_18_fu_4163_p4;
wire   [12:0] tmp_19_fu_4178_p4;
wire   [12:0] tmp_20_fu_4193_p4;
wire   [12:0] tmp_21_fu_4208_p4;
wire   [12:0] tmp_22_fu_4223_p4;
wire   [12:0] tmp_23_fu_4238_p4;
wire   [12:0] tmp_24_fu_4253_p4;
wire   [12:0] tmp_25_fu_4268_p4;
wire   [12:0] tmp_26_fu_4283_p4;
wire   [6:0] tmp_fu_4298_p4;
wire   [23:0] add_ln703_1_fu_4319_p2;
wire   [23:0] add_ln703_2_fu_4329_p2;
wire   [19:0] add_ln703_28_fu_4489_p2;
wire   [24:0] add_ln703_fu_4313_p2;
wire  signed [24:0] sext_ln703_fu_4325_p1;
wire  signed [24:0] sext_ln703_1_fu_4335_p1;
wire   [24:0] add_ln703_3_fu_4339_p2;
wire   [24:0] add_ln703_4_fu_4345_p2;
wire   [24:0] add_ln703_5_fu_4351_p2;
wire   [24:0] add_ln703_6_fu_4357_p2;
wire   [24:0] add_ln703_7_fu_4363_p2;
wire   [24:0] add_ln703_8_fu_4369_p2;
wire   [24:0] add_ln703_9_fu_4375_p2;
wire   [24:0] add_ln703_10_fu_4381_p2;
wire   [24:0] add_ln703_11_fu_4387_p2;
wire   [24:0] add_ln703_12_fu_4393_p2;
wire   [24:0] add_ln703_13_fu_4399_p2;
wire   [24:0] add_ln703_14_fu_4405_p2;
wire   [24:0] add_ln703_15_fu_4411_p2;
wire   [24:0] add_ln703_16_fu_4417_p2;
wire   [24:0] add_ln703_17_fu_4423_p2;
wire   [24:0] add_ln703_18_fu_4429_p2;
wire   [24:0] add_ln703_19_fu_4435_p2;
wire   [24:0] add_ln703_20_fu_4441_p2;
wire   [24:0] add_ln703_21_fu_4447_p2;
wire   [24:0] add_ln703_22_fu_4453_p2;
wire   [24:0] add_ln703_23_fu_4459_p2;
wire   [24:0] add_ln703_24_fu_4465_p2;
wire   [24:0] add_ln703_25_fu_4471_p2;
wire   [24:0] add_ln703_26_fu_4477_p2;
wire   [24:0] add_ln703_27_fu_4483_p2;
wire  signed [24:0] sext_ln703_2_fu_4495_p1;
reg    ap_ce_reg;
reg   [24:0] ap_return_0_int_reg;
reg   [24:0] ap_return_1_int_reg;
reg   [24:0] ap_return_2_int_reg;
reg   [24:0] ap_return_3_int_reg;
reg   [24:0] ap_return_4_int_reg;
reg   [24:0] ap_return_5_int_reg;
reg   [24:0] ap_return_6_int_reg;
reg   [24:0] ap_return_7_int_reg;
reg   [24:0] ap_return_8_int_reg;
reg   [24:0] ap_return_9_int_reg;
reg   [24:0] ap_return_10_int_reg;
reg   [24:0] ap_return_11_int_reg;
reg   [24:0] ap_return_12_int_reg;
reg   [24:0] ap_return_13_int_reg;
reg   [24:0] ap_return_14_int_reg;
reg   [24:0] ap_return_15_int_reg;
reg   [24:0] ap_return_16_int_reg;
reg   [24:0] ap_return_17_int_reg;
reg   [24:0] ap_return_18_int_reg;
reg   [24:0] ap_return_19_int_reg;
reg   [24:0] ap_return_20_int_reg;
reg   [24:0] ap_return_21_int_reg;
reg   [24:0] ap_return_22_int_reg;
reg   [24:0] ap_return_23_int_reg;
reg   [24:0] ap_return_24_int_reg;
reg   [24:0] ap_return_25_int_reg;
reg   [24:0] ap_return_26_int_reg;
reg   [24:0] ap_return_27_int_reg;
reg   [24:0] ap_return_28_int_reg;
wire   [24:0] mul_ln703_10_fu_258_p10;
wire   [24:0] mul_ln703_11_fu_278_p10;
wire   [24:0] mul_ln703_12_fu_262_p10;
wire   [24:0] mul_ln703_13_fu_279_p10;
wire   [24:0] mul_ln703_14_fu_284_p10;
wire   [24:0] mul_ln703_15_fu_282_p10;
wire   [24:0] mul_ln703_16_fu_281_p10;
wire   [24:0] mul_ln703_17_fu_263_p10;
wire   [24:0] mul_ln703_18_fu_270_p10;
wire   [24:0] mul_ln703_19_fu_285_p10;
wire   [23:0] mul_ln703_1_fu_276_p10;
wire   [24:0] mul_ln703_20_fu_274_p10;
wire   [24:0] mul_ln703_21_fu_273_p10;
wire   [24:0] mul_ln703_22_fu_260_p10;
wire   [24:0] mul_ln703_23_fu_277_p10;
wire   [24:0] mul_ln703_24_fu_268_p10;
wire   [24:0] mul_ln703_25_fu_275_p10;
wire   [24:0] mul_ln703_26_fu_266_p10;
wire   [24:0] mul_ln703_27_fu_267_p10;
wire   [19:0] mul_ln703_28_fu_261_p10;
wire   [23:0] mul_ln703_2_fu_259_p10;
wire   [24:0] mul_ln703_3_fu_264_p10;
wire   [24:0] mul_ln703_4_fu_280_p10;
wire   [24:0] mul_ln703_5_fu_286_p10;
wire   [24:0] mul_ln703_6_fu_283_p10;
wire   [24:0] mul_ln703_7_fu_269_p10;
wire   [24:0] mul_ln703_8_fu_272_p10;
wire   [24:0] mul_ln703_9_fu_271_p10;
wire   [24:0] mul_ln703_fu_265_p10;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= add_ln703_fu_4313_p2;
        ap_return_10_int_reg <= add_ln703_10_fu_4381_p2;
        ap_return_11_int_reg <= add_ln703_11_fu_4387_p2;
        ap_return_12_int_reg <= add_ln703_12_fu_4393_p2;
        ap_return_13_int_reg <= add_ln703_13_fu_4399_p2;
        ap_return_14_int_reg <= add_ln703_14_fu_4405_p2;
        ap_return_15_int_reg <= add_ln703_15_fu_4411_p2;
        ap_return_16_int_reg <= add_ln703_16_fu_4417_p2;
        ap_return_17_int_reg <= add_ln703_17_fu_4423_p2;
        ap_return_18_int_reg <= add_ln703_18_fu_4429_p2;
        ap_return_19_int_reg <= add_ln703_19_fu_4435_p2;
        ap_return_1_int_reg <= sext_ln703_fu_4325_p1;
        ap_return_20_int_reg <= add_ln703_20_fu_4441_p2;
        ap_return_21_int_reg <= add_ln703_21_fu_4447_p2;
        ap_return_22_int_reg <= add_ln703_22_fu_4453_p2;
        ap_return_23_int_reg <= add_ln703_23_fu_4459_p2;
        ap_return_24_int_reg <= add_ln703_24_fu_4465_p2;
        ap_return_25_int_reg <= add_ln703_25_fu_4471_p2;
        ap_return_26_int_reg <= add_ln703_26_fu_4477_p2;
        ap_return_27_int_reg <= add_ln703_27_fu_4483_p2;
        ap_return_28_int_reg <= sext_ln703_2_fu_4495_p1;
        ap_return_2_int_reg <= sext_ln703_1_fu_4335_p1;
        ap_return_3_int_reg <= add_ln703_3_fu_4339_p2;
        ap_return_4_int_reg <= add_ln703_4_fu_4345_p2;
        ap_return_5_int_reg <= add_ln703_5_fu_4351_p2;
        ap_return_6_int_reg <= add_ln703_6_fu_4357_p2;
        ap_return_7_int_reg <= add_ln703_7_fu_4363_p2;
        ap_return_8_int_reg <= add_ln703_8_fu_4369_p2;
        ap_return_9_int_reg <= add_ln703_9_fu_4375_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        mul_ln703_10_reg_3807 <= mul_ln703_10_fu_258_p2;
        mul_ln703_11_reg_3811 <= mul_ln703_11_fu_278_p2;
        mul_ln703_12_reg_3815 <= mul_ln703_12_fu_262_p2;
        mul_ln703_13_reg_3819 <= mul_ln703_13_fu_279_p2;
        mul_ln703_14_reg_3823 <= mul_ln703_14_fu_284_p2;
        mul_ln703_15_reg_3827 <= mul_ln703_15_fu_282_p2;
        mul_ln703_16_reg_3831 <= mul_ln703_16_fu_281_p2;
        mul_ln703_17_reg_3835 <= mul_ln703_17_fu_263_p2;
        mul_ln703_18_reg_3839 <= mul_ln703_18_fu_270_p2;
        mul_ln703_19_reg_3843 <= mul_ln703_19_fu_285_p2;
        mul_ln703_1_reg_3771 <= mul_ln703_1_fu_276_p2;
        mul_ln703_20_reg_3847 <= mul_ln703_20_fu_274_p2;
        mul_ln703_21_reg_3851 <= mul_ln703_21_fu_273_p2;
        mul_ln703_22_reg_3855 <= mul_ln703_22_fu_260_p2;
        mul_ln703_23_reg_3859 <= mul_ln703_23_fu_277_p2;
        mul_ln703_24_reg_3863 <= mul_ln703_24_fu_268_p2;
        mul_ln703_25_reg_3867 <= mul_ln703_25_fu_275_p2;
        mul_ln703_26_reg_3871 <= mul_ln703_26_fu_266_p2;
        mul_ln703_27_reg_3875 <= mul_ln703_27_fu_267_p2;
        mul_ln703_28_reg_3879 <= mul_ln703_28_fu_261_p2;
        mul_ln703_2_reg_3775 <= mul_ln703_2_fu_259_p2;
        mul_ln703_3_reg_3779 <= mul_ln703_3_fu_264_p2;
        mul_ln703_4_reg_3783 <= mul_ln703_4_fu_280_p2;
        mul_ln703_5_reg_3787 <= mul_ln703_5_fu_286_p2;
        mul_ln703_6_reg_3791 <= mul_ln703_6_fu_283_p2;
        mul_ln703_7_reg_3795 <= mul_ln703_7_fu_269_p2;
        mul_ln703_8_reg_3799 <= mul_ln703_8_fu_272_p2;
        mul_ln703_9_reg_3803 <= mul_ln703_9_fu_271_p2;
        mul_ln703_reg_3767 <= mul_ln703_fu_265_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = add_ln703_fu_4313_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = sext_ln703_fu_4325_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_10 = ap_return_10_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_10 = add_ln703_10_fu_4381_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_11 = ap_return_11_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_11 = add_ln703_11_fu_4387_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_12 = ap_return_12_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_12 = add_ln703_12_fu_4393_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_13 = ap_return_13_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_13 = add_ln703_13_fu_4399_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_14 = ap_return_14_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_14 = add_ln703_14_fu_4405_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_15 = ap_return_15_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_15 = add_ln703_15_fu_4411_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_16 = ap_return_16_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_16 = add_ln703_16_fu_4417_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_17 = ap_return_17_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_17 = add_ln703_17_fu_4423_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_18 = ap_return_18_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_18 = add_ln703_18_fu_4429_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_19 = ap_return_19_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_19 = add_ln703_19_fu_4435_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = sext_ln703_1_fu_4335_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_20 = ap_return_20_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_20 = add_ln703_20_fu_4441_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_21 = ap_return_21_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_21 = add_ln703_21_fu_4447_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_22 = ap_return_22_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_22 = add_ln703_22_fu_4453_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_23 = ap_return_23_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_23 = add_ln703_23_fu_4459_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_24 = ap_return_24_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_24 = add_ln703_24_fu_4465_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_25 = ap_return_25_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_25 = add_ln703_25_fu_4471_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_26 = ap_return_26_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_26 = add_ln703_26_fu_4477_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_27 = ap_return_27_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_27 = add_ln703_27_fu_4483_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_28 = ap_return_28_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_28 = sext_ln703_2_fu_4495_p1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_3 = ap_return_3_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_3 = add_ln703_3_fu_4339_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_4 = ap_return_4_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_4 = add_ln703_4_fu_4345_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_5 = ap_return_5_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_5 = add_ln703_5_fu_4351_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_6 = ap_return_6_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_6 = add_ln703_6_fu_4357_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_7 = ap_return_7_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_7 = add_ln703_7_fu_4363_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_8 = ap_return_8_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_8 = add_ln703_8_fu_4369_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_9 = ap_return_9_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_9 = add_ln703_9_fu_4375_p2;
    end
end

assign add_ln703_10_fu_4381_p2 = ($signed(25'd33516480) + $signed(mul_ln703_10_reg_3807));

assign add_ln703_11_fu_4387_p2 = ($signed(25'd33491001) + $signed(mul_ln703_11_reg_3811));

assign add_ln703_12_fu_4393_p2 = ($signed(25'd33529432) + $signed(mul_ln703_12_reg_3815));

assign add_ln703_13_fu_4399_p2 = ($signed(25'd33507652) + $signed(mul_ln703_13_reg_3819));

assign add_ln703_14_fu_4405_p2 = ($signed(25'd33533026) + $signed(mul_ln703_14_reg_3823));

assign add_ln703_15_fu_4411_p2 = ($signed(25'd33548141) + $signed(mul_ln703_15_reg_3827));

assign add_ln703_16_fu_4417_p2 = ($signed(25'd33538755) + $signed(mul_ln703_16_reg_3831));

assign add_ln703_17_fu_4423_p2 = ($signed(25'd33528062) + $signed(mul_ln703_17_reg_3835));

assign add_ln703_18_fu_4429_p2 = ($signed(25'd33545973) + $signed(mul_ln703_18_reg_3839));

assign add_ln703_19_fu_4435_p2 = ($signed(25'd33542580) + $signed(mul_ln703_19_reg_3843));

assign add_ln703_1_fu_4319_p2 = ($signed(24'd16620888) + $signed(mul_ln703_1_reg_3771));

assign add_ln703_20_fu_4441_p2 = ($signed(25'd33537908) + $signed(mul_ln703_20_reg_3847));

assign add_ln703_21_fu_4447_p2 = ($signed(25'd33548064) + $signed(mul_ln703_21_reg_3851));

assign add_ln703_22_fu_4453_p2 = ($signed(25'd33548880) + $signed(mul_ln703_22_reg_3855));

assign add_ln703_23_fu_4459_p2 = ($signed(25'd33520600) + $signed(mul_ln703_23_reg_3859));

assign add_ln703_24_fu_4465_p2 = ($signed(25'd33315286) + $signed(mul_ln703_24_reg_3863));

assign add_ln703_25_fu_4471_p2 = ($signed(25'd33457410) + $signed(mul_ln703_25_reg_3867));

assign add_ln703_26_fu_4477_p2 = ($signed(25'd33473578) + $signed(mul_ln703_26_reg_3871));

assign add_ln703_27_fu_4483_p2 = ($signed(25'd33301594) + $signed(mul_ln703_27_reg_3875));

assign add_ln703_28_fu_4489_p2 = ($signed(20'd775349) + $signed(mul_ln703_28_reg_3879));

assign add_ln703_2_fu_4329_p2 = ($signed(24'd16590157) + $signed(mul_ln703_2_reg_3775));

assign add_ln703_3_fu_4339_p2 = ($signed(25'd33479165) + $signed(mul_ln703_3_reg_3779));

assign add_ln703_4_fu_4345_p2 = ($signed(25'd33338996) + $signed(mul_ln703_4_reg_3783));

assign add_ln703_5_fu_4351_p2 = ($signed(25'd33353299) + $signed(mul_ln703_5_reg_3787));

assign add_ln703_6_fu_4357_p2 = ($signed(25'd33514625) + $signed(mul_ln703_6_reg_3791));

assign add_ln703_7_fu_4363_p2 = ($signed(25'd33506722) + $signed(mul_ln703_7_reg_3795));

assign add_ln703_8_fu_4369_p2 = ($signed(25'd33504145) + $signed(mul_ln703_8_reg_3799));

assign add_ln703_9_fu_4375_p2 = ($signed(25'd33534728) + $signed(mul_ln703_9_reg_3803));

assign add_ln703_fu_4313_p2 = ($signed(25'd33393578) + $signed(mul_ln703_reg_3767));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign mul_ln703_10_fu_258_p1 = mul_ln703_10_fu_258_p10;

assign mul_ln703_10_fu_258_p10 = tmp_s_fu_4028_p4;

assign mul_ln703_10_fu_258_p2 = (25'd85590 * mul_ln703_10_fu_258_p1);

assign mul_ln703_11_fu_278_p1 = mul_ln703_11_fu_278_p10;

assign mul_ln703_11_fu_278_p10 = tmp_10_fu_4043_p4;

assign mul_ln703_11_fu_278_p2 = (25'd98126 * mul_ln703_11_fu_278_p1);

assign mul_ln703_12_fu_262_p1 = mul_ln703_12_fu_262_p10;

assign mul_ln703_12_fu_262_p10 = tmp_11_fu_4058_p4;

assign mul_ln703_12_fu_262_p2 = (25'd10090 * mul_ln703_12_fu_262_p1);

assign mul_ln703_13_fu_279_p1 = mul_ln703_13_fu_279_p10;

assign mul_ln703_13_fu_279_p10 = tmp_12_fu_4073_p4;

assign mul_ln703_13_fu_279_p2 = (25'd12030 * mul_ln703_13_fu_279_p1);

assign mul_ln703_14_fu_284_p1 = mul_ln703_14_fu_284_p10;

assign mul_ln703_14_fu_284_p10 = tmp_13_fu_4088_p4;

assign mul_ln703_14_fu_284_p2 = (25'd10320 * mul_ln703_14_fu_284_p1);

assign mul_ln703_15_fu_282_p1 = mul_ln703_15_fu_282_p10;

assign mul_ln703_15_fu_282_p10 = tmp_14_fu_4103_p4;

assign mul_ln703_15_fu_282_p2 = (25'd11063 * mul_ln703_15_fu_282_p1);

assign mul_ln703_16_fu_281_p1 = mul_ln703_16_fu_281_p10;

assign mul_ln703_16_fu_281_p10 = tmp_15_fu_4118_p4;

assign mul_ln703_16_fu_281_p2 = (25'd7799 * mul_ln703_16_fu_281_p1);

assign mul_ln703_17_fu_263_p1 = mul_ln703_17_fu_263_p10;

assign mul_ln703_17_fu_263_p10 = tmp_16_fu_4133_p4;

assign mul_ln703_17_fu_263_p2 = (25'd20311 * mul_ln703_17_fu_263_p1);

assign mul_ln703_18_fu_270_p1 = mul_ln703_18_fu_270_p10;

assign mul_ln703_18_fu_270_p10 = tmp_17_fu_4148_p4;

assign mul_ln703_18_fu_270_p2 = (25'd28108 * mul_ln703_18_fu_270_p1);

assign mul_ln703_19_fu_285_p1 = mul_ln703_19_fu_285_p10;

assign mul_ln703_19_fu_285_p10 = tmp_18_fu_4163_p4;

assign mul_ln703_19_fu_285_p2 = (25'd21420 * mul_ln703_19_fu_285_p1);

assign mul_ln703_1_fu_276_p1 = mul_ln703_1_fu_276_p10;

assign mul_ln703_1_fu_276_p10 = tmp_1_fu_3893_p4;

assign mul_ln703_1_fu_276_p2 = (24'd973 * mul_ln703_1_fu_276_p1);

assign mul_ln703_20_fu_274_p1 = mul_ln703_20_fu_274_p10;

assign mul_ln703_20_fu_274_p10 = tmp_19_fu_4178_p4;

assign mul_ln703_20_fu_274_p2 = (25'd38818 * mul_ln703_20_fu_274_p1);

assign mul_ln703_21_fu_273_p1 = mul_ln703_21_fu_273_p10;

assign mul_ln703_21_fu_273_p10 = tmp_20_fu_4193_p4;

assign mul_ln703_21_fu_273_p2 = (25'd23301 * mul_ln703_21_fu_273_p1);

assign mul_ln703_22_fu_260_p1 = mul_ln703_22_fu_260_p10;

assign mul_ln703_22_fu_260_p10 = tmp_21_fu_4208_p4;

assign mul_ln703_22_fu_260_p2 = (25'd30223 * mul_ln703_22_fu_260_p1);

assign mul_ln703_23_fu_277_p1 = mul_ln703_23_fu_277_p10;

assign mul_ln703_23_fu_277_p10 = tmp_22_fu_4223_p4;

assign mul_ln703_23_fu_277_p2 = (25'd40710 * mul_ln703_23_fu_277_p1);

assign mul_ln703_24_fu_268_p1 = mul_ln703_24_fu_268_p10;

assign mul_ln703_24_fu_268_p10 = tmp_23_fu_4238_p4;

assign mul_ln703_24_fu_268_p2 = (25'd30113 * mul_ln703_24_fu_268_p1);

assign mul_ln703_25_fu_275_p1 = mul_ln703_25_fu_275_p10;

assign mul_ln703_25_fu_275_p10 = tmp_24_fu_4253_p4;

assign mul_ln703_25_fu_275_p2 = (25'd12361 * mul_ln703_25_fu_275_p1);

assign mul_ln703_26_fu_266_p1 = mul_ln703_26_fu_266_p10;

assign mul_ln703_26_fu_266_p10 = tmp_25_fu_4268_p4;

assign mul_ln703_26_fu_266_p2 = (25'd12413 * mul_ln703_26_fu_266_p1);

assign mul_ln703_27_fu_267_p1 = mul_ln703_27_fu_267_p10;

assign mul_ln703_27_fu_267_p10 = tmp_26_fu_4283_p4;

assign mul_ln703_27_fu_267_p2 = (25'd28516 * mul_ln703_27_fu_267_p1);

assign mul_ln703_28_fu_261_p1 = mul_ln703_28_fu_261_p10;

assign mul_ln703_28_fu_261_p10 = tmp_fu_4298_p4;

assign mul_ln703_28_fu_261_p2 = (20'd5531 * mul_ln703_28_fu_261_p1);

assign mul_ln703_2_fu_259_p1 = mul_ln703_2_fu_259_p10;

assign mul_ln703_2_fu_259_p10 = tmp_2_fu_3908_p4;

assign mul_ln703_2_fu_259_p2 = (24'd835 * mul_ln703_2_fu_259_p1);

assign mul_ln703_3_fu_264_p1 = mul_ln703_3_fu_264_p10;

assign mul_ln703_3_fu_264_p10 = tmp_3_fu_3923_p4;

assign mul_ln703_3_fu_264_p2 = (25'd1424 * mul_ln703_3_fu_264_p1);

assign mul_ln703_4_fu_280_p1 = mul_ln703_4_fu_280_p10;

assign mul_ln703_4_fu_280_p10 = tmp_4_fu_3938_p4;

assign mul_ln703_4_fu_280_p2 = (25'd1812 * mul_ln703_4_fu_280_p1);

assign mul_ln703_5_fu_286_p1 = mul_ln703_5_fu_286_p10;

assign mul_ln703_5_fu_286_p10 = tmp_5_fu_3953_p4;

assign mul_ln703_5_fu_286_p2 = (25'd3645 * mul_ln703_5_fu_286_p1);

assign mul_ln703_6_fu_283_p1 = mul_ln703_6_fu_283_p10;

assign mul_ln703_6_fu_283_p10 = tmp_6_fu_3968_p4;

assign mul_ln703_6_fu_283_p2 = (25'd77995 * mul_ln703_6_fu_283_p1);

assign mul_ln703_7_fu_269_p1 = mul_ln703_7_fu_269_p10;

assign mul_ln703_7_fu_269_p10 = tmp_7_fu_3983_p4;

assign mul_ln703_7_fu_269_p2 = (25'd63786 * mul_ln703_7_fu_269_p1);

assign mul_ln703_8_fu_272_p1 = mul_ln703_8_fu_272_p10;

assign mul_ln703_8_fu_272_p10 = tmp_8_fu_3998_p4;

assign mul_ln703_8_fu_272_p2 = (25'd69595 * mul_ln703_8_fu_272_p1);

assign mul_ln703_9_fu_271_p1 = mul_ln703_9_fu_271_p10;

assign mul_ln703_9_fu_271_p10 = tmp_9_fu_4013_p4;

assign mul_ln703_9_fu_271_p2 = (25'd61905 * mul_ln703_9_fu_271_p1);

assign mul_ln703_fu_265_p1 = mul_ln703_fu_265_p10;

assign mul_ln703_fu_265_p10 = trunc_ln56_fu_3884_p1;

assign mul_ln703_fu_265_p2 = (25'd1485 * mul_ln703_fu_265_p1);

assign sext_ln703_1_fu_4335_p1 = $signed(add_ln703_2_fu_4329_p2);

assign sext_ln703_2_fu_4495_p1 = $signed(add_ln703_28_fu_4489_p2);

assign sext_ln703_fu_4325_p1 = $signed(add_ln703_1_fu_4319_p2);

assign tmp_10_fu_4043_p4 = {{data_V_read[155:143]}};

assign tmp_11_fu_4058_p4 = {{data_V_read[168:156]}};

assign tmp_12_fu_4073_p4 = {{data_V_read[181:169]}};

assign tmp_13_fu_4088_p4 = {{data_V_read[194:182]}};

assign tmp_14_fu_4103_p4 = {{data_V_read[207:195]}};

assign tmp_15_fu_4118_p4 = {{data_V_read[220:208]}};

assign tmp_16_fu_4133_p4 = {{data_V_read[233:221]}};

assign tmp_17_fu_4148_p4 = {{data_V_read[246:234]}};

assign tmp_18_fu_4163_p4 = {{data_V_read[259:247]}};

assign tmp_19_fu_4178_p4 = {{data_V_read[272:260]}};

assign tmp_1_fu_3893_p4 = {{data_V_read[25:13]}};

assign tmp_20_fu_4193_p4 = {{data_V_read[285:273]}};

assign tmp_21_fu_4208_p4 = {{data_V_read[298:286]}};

assign tmp_22_fu_4223_p4 = {{data_V_read[311:299]}};

assign tmp_23_fu_4238_p4 = {{data_V_read[324:312]}};

assign tmp_24_fu_4253_p4 = {{data_V_read[337:325]}};

assign tmp_25_fu_4268_p4 = {{data_V_read[350:338]}};

assign tmp_26_fu_4283_p4 = {{data_V_read[363:351]}};

assign tmp_2_fu_3908_p4 = {{data_V_read[38:26]}};

assign tmp_3_fu_3923_p4 = {{data_V_read[51:39]}};

assign tmp_4_fu_3938_p4 = {{data_V_read[64:52]}};

assign tmp_5_fu_3953_p4 = {{data_V_read[77:65]}};

assign tmp_6_fu_3968_p4 = {{data_V_read[90:78]}};

assign tmp_7_fu_3983_p4 = {{data_V_read[103:91]}};

assign tmp_8_fu_3998_p4 = {{data_V_read[116:104]}};

assign tmp_9_fu_4013_p4 = {{data_V_read[129:117]}};

assign tmp_fu_4298_p4 = {{data_V_read[370:364]}};

assign tmp_s_fu_4028_p4 = {{data_V_read[142:130]}};

assign trunc_ln56_fu_3884_p1 = data_V_read[12:0];

endmodule //normalize_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_0_s
